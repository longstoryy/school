# Generated by Django 4.2.24 on 2025-09-21 23:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('student_id', models.CharField(help_text='Unique student identification number', max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('nationality', models.CharField(default='British', max_length=50)),
                ('religion', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('emergency_contact_relationship', models.CharField(max_length=50)),
                ('address_line_1', models.CharField(max_length=255)),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=10)),
                ('country', models.CharField(default='United Kingdom', max_length=50)),
                ('admission_date', models.DateField(default=django.utils.timezone.now)),
                ('current_class', models.CharField(help_text='Current class/grade', max_length=20)),
                ('academic_year', models.CharField(help_text='e.g., 2023-2024', max_length=9)),
                ('roll_number', models.CharField(blank=True, max_length=20, null=True)),
                ('section', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('graduated', 'Graduated'), ('transferred', 'Transferred'), ('suspended', 'Suspended'), ('expelled', 'Expelled')], default='active', max_length=20)),
                ('enrollment_status', models.BooleanField(default=True)),
                ('graduation_date', models.DateField(blank=True, null=True)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('father_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('father_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('mother_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mother_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_name', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('guardian_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('guardian_relationship', models.CharField(blank=True, max_length=50, null=True)),
                ('medical_conditions', models.TextField(blank=True, help_text='Any medical conditions or allergies', null=True)),
                ('medications', models.TextField(blank=True, help_text='Current medications', null=True)),
                ('doctor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('doctor_phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='students/profiles/')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the student', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_students', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_students', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='StudentNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('academic', 'Academic'), ('behavioral', 'Behavioral'), ('medical', 'Medical'), ('general', 'General'), ('disciplinary', 'Disciplinary')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_confidential', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_notes', to='students.student')),
            ],
            options={
                'verbose_name': 'Student Note',
                'verbose_name_plural': 'Student Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('birth_certificate', 'Birth Certificate'), ('previous_school_report', 'Previous School Report'), ('medical_report', 'Medical Report'), ('passport', 'Passport'), ('visa', 'Visa'), ('other', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='students/documents/')),
                ('description', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='students.student')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Document',
                'verbose_name_plural': 'Student Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['student_id'], name='students_st_student_e7126a_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['status'], name='students_st_status_5e2210_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['current_class'], name='students_st_current_bdce35_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['admission_date'], name='students_st_admissi_4d51f0_idx'),
        ),
    ]
